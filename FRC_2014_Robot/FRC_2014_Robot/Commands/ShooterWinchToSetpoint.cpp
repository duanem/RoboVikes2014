// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "ShooterWinchToSetpoint.h"
ShooterWinchToSetpoint::ShooterWinchToSetpoint() :
setpoint(0){
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::shooter);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// Called just before this Command runs the first time
void ShooterWinchToSetpoint::Initialize() {
	
	Robot::shooter->ultrasonic->SetAutomaticMode(true);
}
// Called repeatedly when this Command is scheduled to run
void ShooterWinchToSetpoint::Execute() {
	//double P = Robot::robotPref->GetDouble("ShooterP", 0);
	double sample = Robot::shooter->ultrasonic->GetRangeInches();
	if(sample < 50.0)
	{
		Robot::shooter->rangeSample = sample;	
	}
	setpoint = Robot::robotPref->GetDouble("ShooterSetpoint", 0);
	Robot::shooter->pIDController1->SetSetpoint(setpoint);
	Robot::shooter->pIDController1->Enable();
}
// Make this return true when this Command no longer needs to run execute()
bool ShooterWinchToSetpoint::IsFinished() {
 	return Robot::shooter->rangeSample < setpoint;
}
// Called once after isFinished returns true
void ShooterWinchToSetpoint::End() {
	Robot::shooter->pIDController1->Disable();
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ShooterWinchToSetpoint::Interrupted() {
}
