<head><version>2.59.0</version></head>
<Color_Threshold>
  <blue_end>255</blue_end>
  <blue_start>190</blue_start>
  <green_end>255</green_end>
  <green_start>199</green_start>
  <red_end>163</red_end>
  <red_start>0</red_start>
  <result_type>2</result_type>
</Color_Threshold>
<Adaptive_Threshold>
  <channel_type>1</channel_type>
  <filter_size>7</filter_size>
  <max_threshold>255</max_threshold>
  <mean_offset>5</mean_offset>
  <min_threshold>0</min_threshold>
  <result_type>2</result_type>
</Adaptive_Threshold>
<Blob_Replace>
  <color_index>3</color_index>
  <fill_shape>FALSE</fill_shape>
  <order_array_on_x>FALSE</order_array_on_x>
  <order_array_on_y>FALSE</order_array_on_y>
  <thickness>1</thickness>
</Blob_Replace>
<Blob_Filter>
  <create_blob_array_variable>FALSE</create_blob_array_variable>
  <filters>
    <tab>
      <filter>
        <count_threshold>0</count_threshold>
        <create_array>0</create_array>
        <filter_id>8</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <minimum_size>100</minimum_size>
        <weight_threshold>0</weight_threshold>
      </filter>
    </tab>
    <tab:2/>
    <tab:3/>
    <tab:4/>
    <tab:5/>
    <tab:6/>
  </filters>
  <largest_is_background>FALSE</largest_is_background>
  <show_weights>FALSE</show_weights>
  <sort_array_on_x>FALSE</sort_array_on_x>
  <sort_array_on_y>FALSE</sort_array_on_y>
</Blob_Filter>
<VBScript_Program>
  <script>list = GetArrayVariable("BFR_COORDINATES")
if isArray(list) then
  if ubound(list) &gt; 0 then

    targetPixelHeight = 0
    targetSamples = 0

    ' calibrated for an Axis camera
    imageHeight = GetVariable("IMAGE_HEIGHT")
    cameraFieldOfView = 47.5
    ' specify the known height of the target (12 inches)
    targetHeight = 32.0

    ' grab list of coordinates from blob_replace
    ' note the array is sorted by previous module in a specific order
    righty = list(1)
    rightyy = list(7)
    lefty = list(3)
    leftyy = list(5)

    ' based on these two side lines get the center line height
    ' the center line is used since we want to aim to the center
    ' of the target. This also removes any perspective distortion
    ' where the right or left size may be a couple inches closer
    ' or further away from the camera
    targetPixelHeight = ((lefty - leftyy) + (righty - rightyy)) / 2

    ' we can use a known distance to determine FOV if we don't know it
    ' measuredDistance = 10.0*12.0
    ' write "Calculated FOV " _
    '   (((atan((((targetHeight*imageHeight)/targetPixelHeight)/2) _
    '   /measuredDistance)*2.0)*180.0)/3.14159) &amp; vbCRLF

    ' determine distance in inches
    totalDistance = (((targetHeight*imageHeight)/targetPixelHeight)/2)/ _
      tan(((cameraFieldOfView*3.14159)/180.0)/2.0)

    SetVariable "Distance", CInt((totalDistance*100)/12)/100

  end if
end if
</script>
  <source_mode>gui</source_mode>
  <tab_size_index>1</tab_size_index>
</VBScript_Program>
<Set_Variable>
  <set_1_array>FALSE</set_1_array>
  <set_1_once>TRUE</set_1_once>
  <set_2_array>FALSE</set_2_array>
  <set_2_once>FALSE</set_2_once>
  <set_3_array>FALSE</set_3_array>
  <set_3_once>FALSE</set_3_once>
  <set_4_array>FALSE</set_4_array>
  <set_4_once>FALSE</set_4_once>
  <value_1>[Now]</value_1>
  <variable_1>CALCULATE_DISTANCE</variable_1>
</Set_Variable>
<NetworkTables>
  <delay>100</delay>
  <filter_type_index>0</filter_type_index>
  <hostname>10.7.1.2</hostname>
  <port>1735</port>
  <prefix>/SmartDashboard/</prefix>
  <variables_to_send>CALCULATE_DISTANCE</variables_to_send>
  <variable_type_index>0</variable_type_index>
</NetworkTables>
